name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
        PROJECT_DIR: '/home/runner/work/frontend/frontend'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn

      - name: Build
        run: |
            yarn build
            ls -l
            pwd
            cp -r dist/* /home/runner/work/frontend/frontend/dist/

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            ls
            pwd
            # rsync -avz --delete /home/runner/work/frontend/frontend/dist/ /var/www/html/
            sudo cp -r /home/runner/work/frontend/frontend/dist/* /var/www/html/
            sudo systemctl restart nginx

  build-and-test-application:
    runs-on: ubuntu-latest

    env:
        PROJECT_DIR: '/home/runner/work/frontend/frontend'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          yarn install
          yarn build
        working-directory: ${{ env.PROJECT_DIR }}

      - name: Install Snyk CLI
        run: yarn global add snyk

      - name: Snyk code test
        run: |
            snyk test ${{ env.PROJECT_DIR }} || true
            snyk auth ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Snyk code monitoring
        run: |
            snyk monitor ${{ env.PROJECT_DIR }} || true
            snyk auth ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Get Snyk report
        run: |
          snyk test --json ${{ env.PROJECT_DIR }} > snyk_report.json
          cat snyk_report.json
        continue-on-error: true
        if: always()
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
